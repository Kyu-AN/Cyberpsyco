import requests
import base64
from APIkey import SPOTIFY_API_KEY, SPOTIFY_API_SECRET

def get_access_token():
    auth_str = f"{SPOTIFY_API_KEY}:{SPOTIFY_API_SECRET}"
    b64_auth_str = base64.b64encode(auth_str.encode()).decode()

    headers = {
        "Authorization": f"Basic {b64_auth_str}"
    }
    data = {
        "grant_type": "client_credentials"
    }

    response = requests.post("https://accounts.spotify.com/api/token", headers=headers, data=data)
    result = response.json()
    return result["access_token"]

def search_spotify_tracks(keyword, token):
    headers = {
        "Authorization": f"Bearer {token}"
    }
    params = {
        "q": keyword,
        "type": "track",
        "limit": 5
    }
    response = requests.get("https://api.spotify.com/v1/search", headers=headers, params=params)
    if response.status_code != 200:
        print(f"[{keyword}] 검색 실패: {response.status_code}")
        return []

    results = response.json().get("tracks", {}).get("items", [])
    track_info = [
        f"{track['name']} - {track['artists'][0]['name']}" for track in results
    ]
    return track_info
